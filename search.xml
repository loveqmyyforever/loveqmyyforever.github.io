<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>我的博客搭建</title>
      <link href="/2023/01/04/wo-de-bo-ke-da-jian/"/>
      <url>/2023/01/04/wo-de-bo-ke-da-jian/</url>
      
        <content type="html"><![CDATA[<h2 id="一、前期准备"><a href="#一、前期准备" class="headerlink" title="一、前期准备"></a>一、前期准备</h2><h3 id="1-1在自己电脑上创建一个文件夹，用来存放搭建博客所需要的工具和文件"><a href="#1-1在自己电脑上创建一个文件夹，用来存放搭建博客所需要的工具和文件" class="headerlink" title="1.1在自己电脑上创建一个文件夹，用来存放搭建博客所需要的工具和文件"></a>1.1在自己电脑上创建一个文件夹，用来存放搭建博客所需要的工具和文件</h3><ul><li><p>比如我在D盘创建了一个名字叫Blog的文件夹。</p><img src="/images/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/blog1.png" style="zoom:;" /></li><li><p>然后进入Blog文件夹，再创建两个文件夹。一个是Tools，用来存放待会搭建博客要用到的工具；另一个是用来存放博客的各种配置文件和作品，名字随便取。我自己就取了一个跟我GitHub仓库一样的名字。</p><p><img src="/images/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/blog2.png"></p></li></ul><span id="more"></span><h3 id="1-2下载搭建博客所需要的工具Git和node-js"><a href="#1-2下载搭建博客所需要的工具Git和node-js" class="headerlink" title="1.2下载搭建博客所需要的工具Git和node.js"></a>1.2下载搭建博客所需要的工具<a href="https://git-scm.com/download">Git</a>和<a href="https://nodejs.org/en/download/">node.js</a></h3><ul><li><p>因为我自己创建了专门存放工具的文件夹，所以我放在Tools里面</p><p><img src="/images/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/tool.png"></p></li></ul><h3 id="1-3把Node-js和Git加入系统环境变量中"><a href="#1-3把Node-js和Git加入系统环境变量中" class="headerlink" title="1.3把Node.js和Git加入系统环境变量中"></a>1.3把Node.js和Git加入系统环境变量中</h3><ul><li><p>在命令提示符中输入SystemPropertiesAdvanced.exe打开系统属性，打开环境变量。</p><img src="/images/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E7%BD%AE.png" alt="" style="zoom: 67%;" /></li><li><p>先选中Path，再点击编辑。</p><img src="/images/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.png" alt="" style="zoom:67%;" /></li><li><p>新建一个变量，然后把Git和Node.js环境加进去。</p><img src="/images/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/%E7%BC%96%E8%BE%91%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F.png" alt="" style="zoom:67%;" /></li><li><p>完成之后，我们打开命令提示符（win+r），分别输入：</p><pre class="line-numbers language-none"><code class="language-none">node -vgit --version<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><strong>如果下面有版本号跳出来，恭喜你环境变量添加成功！</strong></p></li></ul><h2 id="二、注册GitHub账号，并进行Git配置"><a href="#二、注册GitHub账号，并进行Git配置" class="headerlink" title="二、注册GitHub账号，并进行Git配置"></a>二、注册GitHub账号，并进行Git配置</h2><h3 id="2-1注册账号不用我说了吧，都这么大的人了"><a href="#2-1注册账号不用我说了吧，都这么大的人了" class="headerlink" title="2.1注册账号不用我说了吧，都这么大的人了~"></a>2.1注册账号不用我说了吧，都这么大的人了~</h3><h3 id="2-2配置Git-用户名和邮箱"><a href="#2-2配置Git-用户名和邮箱" class="headerlink" title="2.2配置Git 用户名和邮箱"></a>2.2配置Git 用户名和邮箱</h3><ul><li><p>在桌面点击鼠标右键，点击 Git Bash Here，然后分别输入下面的两个命令，并回车：</p><p><img src="/images/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/%E6%97%A0%E6%A0%87%E9%A2%98.png"></p><pre class="line-numbers language-none"><code class="language-none">git config --global user.name &quot;此处填写你注册时的用户名&quot;git config --global user.email &quot;此处填写你注册时的邮箱&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p>然后在<code>C:/Users/[username</code>找到<code>.gitconfig</code>文件<strong>（未找到的话，请开启显示隐藏文件的功能）</strong>，打开后可以看到一下内容：</p><pre class="line-numbers language-none"><code class="language-none">[user]name &#x3D; xxxemail &#x3D; xxx@xxx.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="2-3配置GitHub"><a href="#2-3配置GitHub" class="headerlink" title="2.3配置GitHub"></a>2.3配置GitHub</h3><ul><li><p>新建一个名为你的用户名.github.io的仓库</p><p>比如说，如果你的github用户名是<code>test</code>，那么你就新建<code>test.github.io</code>的仓库（必须是你的用户名，其它名称无效），将来你的网站访问地址就是 <code>http://test.github.io</code>了.</p></li><li><p>具体操作如图：</p><p><img src="/images/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/20201109215618150.png"></p><p><img src="/images/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/20201109215908851-167283383440317.png"></p><p><img src="/images/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/20201110094937609.png"></p><p><img src="/images/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/20201110095650122.png"></p><p><img src="/images/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/20201110100254734.png"></p></li></ul><h3 id="2-4配置SSH-免密登录"><a href="#2-4配置SSH-免密登录" class="headerlink" title="2.4配置SSH 免密登录"></a>2.4配置SSH 免密登录</h3><ul><li><p>为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。</p><p><strong>简单的来说就是给予你当前电脑访问你GitHub 仓库的权限</strong></p></li><li><p>回到桌面，右键桌面的<code>git bash here</code>，创建一个ssh密钥</p><pre class="line-numbers language-none"><code class="language-none">cd ~&#x2F;.sshssh-keygen -t rsa -C &quot;你自己的邮箱&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>然后enter三连</p><p>它会在<code>C:\Users\用户名\.ssh</code>生成下面两个文件<strong>（要勾选显示“隐藏的项目”）</strong>：</p><p><img src="/images/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/1.png"></p><p>而我们要的是下面的<code>id_rsa.pub</code>文件，<strong>这里面有我们的公开的ssh码，也是给管理员这个ssh，让它来添加</strong></p></li><li><p>登陆 <strong>GitHub <strong>，进入 <strong>Settings</strong> 页面，选择左边栏的</strong>SSH and GPG keys</strong>，点击 <strong>New SSH key</strong>。</p><p>Title 随便取个名字，粘贴复制的 id_rsa.pub 内容到 Key 中，点击 Add SSH key 完成添加。</p><p><img src="/images/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/v2-9125065afd24332d7cd84feb6a350730_r.jpg"></p><p><strong>OK，咱们搭建博客的环境搞好了，接下来可以搭建博客框架，然后写文章进行推送啦！</strong></p></li></ul><h2 id="三、本地安装-Hexo-博客框架并推送到-GitHub"><a href="#三、本地安装-Hexo-博客框架并推送到-GitHub" class="headerlink" title="三、本地安装 Hexo 博客框架并推送到 GitHub"></a>三、本地安装 Hexo 博客框架并推送到 GitHub</h2><h3 id="3-1-博客初始化"><a href="#3-1-博客初始化" class="headerlink" title="3.1 博客初始化"></a>3.1 博客初始化</h3><ul><li><p>在命令行安装cnpm</p><pre class="line-numbers language-none"><code class="language-none">npm install -g cnpm --registry&#x3D;https:&#x2F;&#x2F;registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装后验证：<code>cnpm -v</code> 出现版本号说明安装成功</p></li><li><p>命令行安装hexo （安装博客框架）</p><pre class="line-numbers language-none"><code class="language-none">cnpm install -g hexo-cli<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>安装后验证：<code>hexo -v</code> 出现版本号说明安装成功</p></li><li><p>接着进入存放博客的文件夹中<strong>（我的文件夹取名叫loveqmyyforever.github.io，所以我就进入我这个文件夹）</strong>，右键打开<strong>Git bash here</strong>,并依次执行以下命令:</p><pre class="line-numbers language-none"><code class="language-none">hexo init #初始化命令，hexo会自动下载一些文件到这个目录，包括node_modules等hexo g #生成命令hexo s #启动服务<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>说明：</strong><code>hexo s</code> 是开启本地预览服务，打开浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a> 即可看到内容，说明博客初始化以及成功！</p><p>很多人会碰到浏览器一直在转圈但是就是加载不出来的问题，一般情况下是因为端口占用的缘故，</p><p>因为4000这个端口太常见了， 只需要关闭4000端口或者重新选择端口即可</p><p><strong>到此博客的初始化便完成了，此时你可以本地开启服务并访问，下一步便是推送到GitHub 上！</strong></p></li></ul><h3 id="3-2-将博客部署到-github-个人主页上"><a href="#3-2-将博客部署到-github-个人主页上" class="headerlink" title="3.2 将博客部署到 github 个人主页上"></a>3.2 将博客部署到 github 个人主页上</h3><ul><li><p>在<strong>loveqmyyforever.github.io</strong>文件夹就中安装<code>hexo-deployer-git</code> 插件，同样的，右击<strong>Git bash here</strong>。</p><pre class="line-numbers language-none"><code class="language-none">npm install hexo-deployer-git --save #必须安装，否则执行hexo d 的话会报错<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>安装好之后，就可以看到有一个叫做<code> _config.yml</code>的文件，打开它，拉到底，在文件末尾修改配置信息：</p><pre class="line-numbers language-none"><code class="language-none">deploy:  type: git  repo: github上对应仓库的ssh链接 或 github上对应仓库的ssh链接    branch: main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>注意 <code>:</code> 后面一定要有空格！！！</strong></p></li><li><p>最后，在<strong>loveqmyyforever.github.io</strong>文件夹下将本地blog推送到 github仓库</p><pre class="line-numbers language-none"><code class="language-none">hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>推送成功后, 在浏览器中输入对应域名, 即可访问 <code>https://你的账户名字.github.io/</code></p><p>现在，我们已经把博客搭建好了！</p><p>嗷，对了，还有一些hexo框架常用的命令：</p><table><thead><tr><th>命令</th><th><strong>说明</strong></th></tr></thead><tbody><tr><td><code>hexo clean</code></td><td>清除本地项目缓存</td></tr><tr><td><code>hexo g</code></td><td>重新生成</td></tr><tr><td><code>Hexo d</code></td><td>推送到github</td></tr><tr><td><code>Hexo s</code></td><td>开启本地预览</td></tr></tbody></table><p>当然，命令也可以连起来用，就像这样：<code>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code>。</p></li></ul><h2 id="四、如何解析自己的域名到博客主页"><a href="#四、如何解析自己的域名到博客主页" class="headerlink" title="四、如何解析自己的域名到博客主页"></a>四、如何解析自己的域名到博客主页</h2><h3 id="4-1注册域名"><a href="#4-1注册域名" class="headerlink" title="4.1注册域名"></a>4.1注册域名</h3><p><a href="https://cloud.tencent.com/act/pro/domain-sales?fromSource=gwzcw.2043811.2043811.2043811&utm_id=gwzcw.2043811.2043811.2043811&utm_medium=cpc">腾讯云看这里</a></p><p><a href="https://wanwang.aliyun.com/?utm_content=se_1003106260">阿里云看这里</a></p><h3 id="4-2将自己的域名解析到github-page"><a href="#4-2将自己的域名解析到github-page" class="headerlink" title="4.2将自己的域名解析到github page"></a>4.2将自己的域名解析到github page</h3><ul><li><p>添加这两个记录</p><p><img src="/images/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/P4(V%25DEWIVXO$F$734)GO$V.png"></p></li><li><p>在GitHub仓库中，将自己的域名写进去</p><p><img src="/images/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/QQ%E5%9B%BE%E7%89%8720230104224524.png"></p><p>这样子，我们的域名就能成功和自己的博客绑定一起了。</p><p>但是吧，我发现我每次把文章推送上去后，GitHub仓库里的域名又给我清空了，可恶！</p><p>解决办法：</p><ul><li><p>找到站点配置文件的<code>source</code>文件夹，点进去。</p><p><img src="/images/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/QQ%E5%9B%BE%E7%89%8720230104225139.png"></p></li><li><p>新建一个<strong>文本文档</strong>，在里面输入<strong>自己注册的域名。</strong></p><p><img src="/images/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/rwr.png"></p></li><li><p>保存的名字是<code>CNAME</code>，不要后缀名！</p><p><img src="/images/%E6%88%91%E7%9A%84%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/fgdf.png"></p></li></ul></li></ul><p><strong>这样，我们就可以通过自己的域名来访问自己的博客了!</strong></p>]]></content>
      
      
      
        <tags>
            
            <tag> blog </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/01/02/hello-world/"/>
      <url>/2023/01/02/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><span id="more"></span><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
